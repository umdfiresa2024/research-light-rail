---
title: "Do Light Rails Provide the Track to Cleaner Air?"
date: 9/10/2024
author: FIRE Sustainability Analytics
format: gfm
editor: visual
---

# 1. Introduction

This research project aims to find if light rail openings result in an overall decrease in air pollution in U.S. urban areas? The answer to this question will help predict air pollution impacts of the Purple Line in Maryland that is scheduled to open in 2027.

To examine the potential impact of light rail openings, we will analyze the outcomes in other U.S. cities with light rail systems, utilizing ground-level PM2.5 data developed by Di et al. (2021). This data has a spatial resolution of 1-kilometer grids and a daily temporal resolution from 2000 to 2016. We will focus on cities where light rail is the primary mode of rail transit, and no other urban rail systems are present. Four light rail systems in the United States meet these criteria: the Lynx Blue Line in Charlotte, North Carolina; the Red METRORail Line in Houston, Texas; the Blue METRO Line in Minneapolis-St. Paul, Minnesota; and the Valley Metro Rail in Phoenix-Mesa, Arizona.

We will employ a difference-in-difference estimation strategy to compare air pollution trends in cities with light rail openings and control cities that had similar air pollution trends before the light rail openings. This will involve determining monthly average PM2.5 levels for all urban areas in the U.S. We will then use synthetic control methods to generate data for control cities with pre-light rail pollution trends similar to each treated city. Subsequently, we will calculate potential changes in air pollution due to light rail openings.

This research project aims to provide the most rigorous impact estimation of light rail openings on air pollution to date. While existing studies suggest that light rails are environmentally superior to other transportation options, they haven't conclusively shown that their opening reduces city-wide air pollution (Mulley et al., 2017; Ham et al., 2017).

Unlike numerous studies on subway openings, there are limited studies on light rails. Park & Sener (2019) indicate a 24% decrease in CO measured from monitors after the opening of the Houston light rail, and Fageda (2021) suggests a 3% decrease in PM2.5 after light-rail openings in European cities.

Our study will differ from existing studies on light rail and air pollution in several ways. Because Park & Sener (2019) analyzed the change in pollution in only one city, there may be other factors affecting the change in the pollution that confounds with the opening of the light rail. Our study will also use higher frequency pollution data than the annual level used in Fageda (2021), allowing us to control for meteorological factors. 

As Park & Sener (2019) only included data two years before the light rail opening, and Fageda (2021) included data three years before the light rail openings, their findings can confound with the construction period of light rails. As shown in Figure 1, light rail construction usually happens around three years before light rail openings. There is also an increase in PM2.5 levels during the construction period. By including data only two to three years before light rail openings, existing studies can overestimate the degree of pollution reduction, as construction activities can contribute to the higher pollution levels before light rail openings. 

## 1.2. Treatment Criteria

-   As Di et al. (2021) provides data from 2000 to 2016, candidate treatment cities must have light rails that opened from January 2004 to December 2012 in order to have four years of data before and after light rail opening.

-   Treatment cities must have no increase heavy rail usage in the four years before and after opening window.

+-----------------+---------------+------------------------+------------+-----------+
| City            | Opening Month | Construction           | Eval Start | Eval Ends |
+=================+===============+========================+============+===========+
| Charlotte, NC   | Nov 2007      | Mar 2005 - Nov 2007,   | Nov 2003   | Nov 2011  |
|                 |               |                        |            |           |
|                 |               | Dec 2012 onwards       |            |           |
+-----------------+---------------+------------------------+------------+-----------+
| Houston, TX     | Jan 2004      | March 2001 - Jan 2004, | Jan 2000   | Jan 2008  |
|                 |               |                        |            |           |
|                 |               | Jan 2014 onwards       |            |           |
+-----------------+---------------+------------------------+------------+-----------+
| Twin Cities, MN | Jun 2004      | Feb 2001 - Jun 2004    | Jun 2000   | Jun 2008  |
|                 |               |                        |            |           |
|                 |               | Jan 2010 onwards       |            |           |
+-----------------+---------------+------------------------+------------+-----------+
| Phoenix, AZ     | Dec 2008      | July 2005 - Dec 2008   | Dec 2004   | Dec 2012  |
|                 |               |                        |            |           |
|                 |               | July 2012 onwards      |            |           |
+-----------------+---------------+------------------------+------------+-----------+

## 1.3. Untreated Area for Each Treated Area

The plot below shows number of trips for each mode of revenue-generating transportation in Charlotte.

Because buses are the primary alternative transportation in the city, control cities for **Charlotte** are cities that primarily runs on buses in South Carolina and North Carolina with no rails and no light rails. This includes, Asheville, NC, Charleston, SC, Columbia, SC, Durham, NC, Fayetteville, NC, Greenville, SC, Myrtle Beach, SC, Socastee, SC, Wilmington, NC, and Winston-Salem, NC.

```{r}
#| echo: false
#| message: false
#| warning: false

library("tidyverse")

trans<-read.csv("ntd_by_year.csv") 

charlotte<-trans |>
  filter(Urbanized.Area=="Charlotte, NC")  

png("Presentation/images/ridership_nc.png", 
    res=500, width=5, height=5, units="in")

ggplot(data=charlotte)+
  geom_line(aes(y=LR, x=year, col="light rail"), lwd=2)+
  geom_line(aes(y=bus, x=year, col="bus"), lwd=2) + 
  geom_line(aes(y=cars, x=year, col="cars"), lwd=2) + 
  geom_line(aes(y=rail, x=year, col="rail"), lwd=2) + 
  geom_line(aes(y=oth, x=year, col="other"), lwd=2) + 
  ylab("Number of Trips for Each Public Transport Mode")+
  ggtitle("Charlotte, NC")+
  geom_vline(xintercept=2007, linetype = "dotted", lwd=2)+
  theme_bw()+
  scale_x_continuous(breaks = seq(min(charlotte$year), max(charlotte$year), by = 2))

dev.off()
```

The plot below shows number of trips for each mode of revenue-generating transportation in Houston.

Control cities for **Houston** are other cities in Texas with no rails, no light rails, and less than 5% of other forms of other transportation in light rail opening year. This includes Austin, TX, Beaumont, TX, Brownsville, TX, College Station, TX, Corpus Christi, TX, Lewisville, TX, El Paso, TX-NM, Laredo, TX, Lubbock, TX, Odessa, TX, San Antonio, TX, and Waco, TX.

```{r}
#| echo: false
#| message: false
#| warning: false

trans<-read.csv("ntd_04to13.csv") 

houston<-trans |>
  filter(ID==6008) 

ggplot(data=houston)+
  geom_line(aes(y=LR, x=year, col="light rail"))+
  geom_line(aes(y=bus, x=year, col="bus")) + 
  geom_line(aes(y=cars, x=year, col="cars")) + 
  geom_line(aes(y=rail, x=year, col="rail")) + 
  geom_line(aes(y=oth, x=year, col="other")) + 
  ylab("Number of Trips for Each Public Transport Mode")+
  ggtitle("Houston, TX")+
  geom_vline(xintercept=2004, linetype = "dotted")+
  theme_bw()
```

The plot below shows number of trips for each mode of revenue-generating transportation in the Twin Cities

Control cities for the **Twin Cities** are other cities in Minnesota and Wisconsin with no rails, no light rails, and less than 5% of other forms of other transportation in light rail opening year. This includes Beloit, WI, Duluth, MN, Rochester, MN, and Wausau, WI.

```{r}
#| echo: false
#| message: false
#| warning: false

trans<-read.csv("ntd_04to13.csv") 

mn<-trans |>
  filter(ID==5027) 

ggplot(data=mn)+
 geom_line(aes(y=LR, x=year, col="light rail"))+
  geom_line(aes(y=bus, x=year, col="bus")) + 
  geom_line(aes(y=cars, x=year, col="cars")) + 
  geom_line(aes(y=rail, x=year, col="rail")) + 
  geom_line(aes(y=oth, x=year, col="other")) + 
  ylab("Number of Trips for Each Public Transport Mode")+
  geom_vline(xintercept=2004, linetype = "dotted")+
  ggtitle("Twin Cities, TX")+
  theme_bw()
```

The plot below shows number of trips for each mode of revenue-generating transportation in the Phoenix-Mesa.

Control cities for **Phoenix-Mesa** are cities in other Arizona metropolitan areas with no rails and no light rails. This includes Flagstaff, AZ, Sierra Vista, AZ, and Tucson, AZ.

```{r}
#| echo: false
#| message: false
#| warning: false

charlotte<-trans |>
  filter(Urbanized.Area=="Phoenix-Mesa, AZ")  

png("Presentation/images/ridership_az.png", 
    res=500, width=5, height=5, units="in")

ggplot(data=charlotte)+
  geom_line(aes(y=LR, x=year, col="light rail"), lwd=2)+
  geom_line(aes(y=bus, x=year, col="bus"), lwd=2) + 
  geom_line(aes(y=cars, x=year, col="cars"), lwd=2) + 
  geom_line(aes(y=rail, x=year, col="rail"), lwd=2) + 
  geom_line(aes(y=oth, x=year, col="other"), lwd=2) + 
  ylab("Number of Trips for Each Public Transport Mode")+
  ggtitle("Phoenix-Mesa, AZ")+
  geom_vline(xintercept=2008, linetype = "dotted", lwd=2)+
  theme_bw()+
  scale_x_continuous(breaks = seq(min(charlotte$year), max(charlotte$year), by = 2))

dev.off()
```

# 2. Data

## 2.1. PM2.5 in Treatment Cities

As particulate matter is one of the most damaging air pollutants, we use ground-level PM2.5 concentrations to represent city-level air quality. PM2.5 data comes from Di et al. (2019), which provides daily PM2.5 concentrations in grid cells at a resolution of 1 km for the years 2000 to 2016.

For each treated city, we identified which highway light rails could potentially serve as a substitute, and we extracted daily levels of PM2.5 in areas within 1 km of those highways.

The black lines in the figure below shows the area we extracted daily PM2.5 data of the treated cities, Charlotte and the Twin Cities. The yellow line shows the light rail route of interest.

![](maps/treat_charlotte.png)

![](maps/treat_twin_cities.png)

```{r}
#| echo: false
#| message: false
#| warning: false

df<-read.csv("daily roads/pm25_daily_roads.csv") |>
  filter(Address=="Charlotte, NC")  |>
  mutate(date=as.Date(substr(date, 1,8), "%Y%m%d")) |>
  group_by(month, year) |>
  summarise(pm25=mean(pm25)) |>
  mutate(date=as.Date(paste0(as.character(year), "-", as.character(month), "-01")))

png("Presentation/images/construction_nc.png", 
    res=500, width=7, height=5, units="in")

ggplot(data=df, aes(x=date, y=pm25))+geom_line(lwd=1)+
  ggtitle("Charlotte, NC")+
  ylab("PM2.5 (in ug/m3)")+
  xlab("Year")+
  geom_vline(aes(xintercept=as.Date("2007-11-01"), col="Light Rail Opening"), linetype="dashed")+
  annotate("rect", xmin = as.Date("2005-03-01"), xmax = as.Date("2007-11-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  annotate("rect", xmin = as.Date("2012-12-01"), xmax = as.Date("2018-12-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  theme_bw()+
  scale_color_manual(values=c("#FFCD00", "#c8102e", "#eeeeee"))

dev.off()

```

```{r}
#| echo: false
#| message: false
#| warning: false

df<-read.csv("daily roads/pm25_daily_roads.csv") |>
  filter(Address=="Houston, TX")  |>
  mutate(date=as.Date(substr(date, 1,8), "%Y%m%d"))

ggplot(data=df, aes(x=date, y=pm25))+geom_line()+
  ggtitle("Houston, TX")+
  ylab("PM2.5 (in ug/m3)")+
  xlab("Year")+
  geom_vline(aes(xintercept=as.Date("2004-01-01"), col="Light Rail Opening"), linetype="dashed")+
  geom_vline(aes(xintercept=as.Date("2000-01-01"), col="Four Years Before or After Opening"), linetype="dotted", size=1)+
  geom_vline(aes(xintercept=as.Date("2008-01-01"), col="Four Years Before or After Opening"), linetype="dotted", size=1)+
  annotate("rect", xmin = as.Date("2001-03-01"), xmax = as.Date("2004-01-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  annotate("rect", xmin = as.Date("2014-01-01"), xmax = as.Date("2018-12-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  theme_bw()+
  scale_color_manual(values=c("#FFCD00", "#c8102e", "#eeeeee"))

```

```{r}
#| echo: false
#| message: false
#| warning: false

df<-read.csv("daily roads/pm25_daily_roads.csv") |>
  filter(Address=="Minneapolis-St. Paul, MN")  |>
  mutate(date=as.Date(substr(date, 1,8), "%Y%m%d"))

ggplot(data=df, aes(x=date, y=pm25))+geom_line()+
  ggtitle("Minneapolis-St. Paul, MN")+
  ylab("PM2.5 (in ug/m3)")+
  xlab("Year")+
  geom_vline(aes(xintercept=as.Date("2004-07-01"),  col="Light Rail Opening"), linetype="dashed")+
  geom_vline(aes(xintercept=as.Date("2000-07-01"), col="Four Years Before or After Opening"), linetype="dotted", size=1)+
  geom_vline(aes(xintercept=as.Date("2008-07-01"), col="Four Years Before or After Opening"), linetype="dotted", size=1)+
  annotate("rect", xmin = as.Date("2001-02-01"), xmax = as.Date("2004-07-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  annotate("rect", xmin = as.Date("2010-01-01"), xmax = as.Date("2018-12-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  theme_bw()+
  scale_color_manual(values=c("#FFCD00", "#c8102e", "#eeeeee"))
```

```{r}
#| echo: false
#| message: false
#| warning: false

df<-read.csv("daily roads/pm25_daily_roads.csv") |>
  filter(Address=="Phoenix=Mesa, AZ")  |>
  mutate(date=as.Date(substr(date, 1,8), "%Y%m%d")) |>
  group_by(month, year) |>
  summarise(pm25=mean(pm25)) |>
  mutate(date=as.Date(paste0(as.character(year), "-", as.character(month), "-01")))

png("Presentation/images/construction_az.png", 
    res=500, width=7, height=5, units="in")

ggplot(data=df, aes(x=date, y=pm25))+geom_line(lwd=1)+
  ggtitle("Phoenix, AZ")+
  ylab("PM2.5 (in ug/m3)")+
  xlab("Year")+
  geom_vline(aes(xintercept=as.Date("2008-12-01"), col="Light Rail Opening"), linetype="dashed", lwd=1)+
  annotate("rect", xmin = as.Date("2005-07-01"), xmax = as.Date("2008-12-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  annotate("rect", xmin = as.Date("2012-07-01"), xmax = as.Date("2018-12-01"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  theme_bw()+
  scale_color_manual(values=c("#FFCD00", "#c8102e", "#eeeeee"))

dev.off()
```

## 2.2. PM2.5 in Untreated Areas

For each untreated city identified in section 1.3., we draw a 30 km radius around each city's centroid, crop interstates segments that fall within that centroid, and draw 1 km radius around each cropped interstate. We then find the daily average PM2.5 levels within each 1 km radius around the cropped interstate area for each city.

![](maps/cntrl_roads.png)

## 2.3. Meteorology

To take into account meteorological conditions, we include 48 land surface meteorological variables provided by NASA Global Land Data Assimilation System Version 2. The data set provides rasters with a raster of 0.25 x0.25 degree daily. We then calculate the daily averages for the treatment and control areas as described above.

# 3. Estimation Methods

## 3.1. Difference-in-Difference

For each treatment city, we use data from untreated city with similar public pre-light-rail transportation profiles as controls. Our main regression specification is:

\$ P\_{it}=\gamma (D_i \times Open_t) + W'\_{it} \beta +\mu\_i + \eta*t +\* \epsilon{it} \$

where $P_{it}$ are PM2.5 levels (in ug/m3) for each city $i$ and day $t$.

$D_i$ is a dummy variable that is equal to one when city $i$ is the city with a light rail system.

$Open_t$ is a dummy variable that is equal to one when the light rail system in the treated city is in operation.

$W_{it}$ includes 48 meteorological control variables in its linear, square, and cubic form for each city and day.

$\mu_i$ are city fixed effects.

$\eta_t$ is time fixed effects, which is a combination of day of week fixed effects, month fixed effects, year fixed effects, or day fixed effects, depending on the specific regression.

### Charlotte

Trends between treat and untreated groups. Area in the grey box (construction years) are dropped from our main results.

```{r}
#| echo: false
#| message: false
#| warning: false

trt_pm<-read.csv("daily roads/pm25_daily_roads.csv") |>
  mutate(date=as.Date(substr(date, 1,8), "%Y%m%d")) |>
  select(-day)

cntrl_pm<-read.csv("daily roads/pm25_daily_roads_cntrl.csv") |>
  select(-city_num, -year, -month, -day) |>
  mutate(date=as.Date(substr(date, 1,8), "%Y%m%d")) |>
  mutate(month=month(date), year=year(date))

pm<-rbind(trt_pm, cntrl_pm)

cgroup<-c("Charlotte, NC", 
          "Concord, NC", 
          "Winston-Salem, NC")

pm_month<-pm |>
  group_by(Address, month, year) |>
  summarise(pm25=mean(pm25)) |>
  filter(Address %in% cgroup) |>
  mutate(date=as.Date(paste0(as.character(year),"-",
                             as.character(month),"-",
                             "01"), "%Y-%m-%d"))

ggplot(data=pm_month, aes(y=pm25, x=date, col=Address)) + 
  geom_line(size=1) + 
  scale_color_manual(values=c("grey","black","#FFCD00", "#c8102e"))+
  geom_vline(aes(xintercept=as.Date("2007-11-01"), col=" LR Opening"), 
             linetype="dashed", size=1)+
  annotate("rect", xmin = as.Date("2005-01-01"), xmax = as.Date("2007-12-31"), 
           ymin = 0, ymax = 25, alpha = .5,fill = "grey")+
  theme_bw()
```

```{r}
#| echo: false
#| message: false
#| warning: false

construction<-as.Date("2005-03-01")
expansion<-as.Date("2012-12-01")
open<-as.Date("2007-11-01")

#start dif-in-dif data analysis
df<-read.csv("daily roads/panel.csv") |>
  filter(Address=="Winston-Salem, NC" | Address=="Greenville, SC" | 
           Address=="Columbia, SC" | Address=="Asheville, NC" |
           Address=="Charleston, SC" | Address=="Durham, NC" |
           Address=="Fayetteville, NC" | Address=="Greenville, SC" |
           Address=="Charlotte, NC") |>
  #create number representing each city
  mutate(add_num=factor(Address)) |>
  mutate(add_num=as.numeric(add_num)) |>
  #remove unwanted years
  mutate(date=as.Date(date)) |>
  filter(date<construction | date>open) |> 
  filter(date<expansion) |>
  mutate(operating=ifelse(date>open,1,0)) |>
  mutate(treatcity=ifelse(Address=="Charlotte, NC",1,0)) |>
  filter(Address!="Concord, NC") |>
  mutate(dow=weekdays(date)) |>
  mutate(dow_m=paste0(dow,"-",month)) |>
  mutate(dow_my=paste0(dow,"-",month,"-",year))
```

```{r}
#| echo: false
#| message: false
#| warning: false

df$Swnet_tavg_sq <- df$Swnet_tavg^2
df$Swnet_tavg_cu <- df$Swnet_tavg^3

df$Lwnet_tavg_sq <- df$Lwnet_tavg^2
df$Lwnet_tavg_cu <- df$Lwnet_tavg^3

df$Qle_tavg_sq <- df$Qle_tavg^2
df$Qle_tavg_cu <- df$Qle_tavg^3

df$Qh_tavg_sq <- df$Qh_tavg^2
df$Qh_tavg_cu <- df$Qh_tavg^3

df$Qg_tavg_sq <- df$Qg_tavg^2
df$Qg_tavg_cu <- df$Qg_tavg^3

df$Snowf_tavg_sq <- df$Snowf_tavg^2
df$Snowf_tavg_cu <- df$Snowf_tavg^3

df$Rainf_tavg_sq <- df$Rainf_tavg^2
df$Rainf_tavg_cu <- df$Rainf_tavg^3

df$Evap_tavg_sq <- df$Evap_tavg^2
df$Evap_tavg_cu <- df$Evap_tavg^3

df$Qs_tavg_sq <- df$Qs_tavg^2
df$Qs_tavg_cu <- df$Qs_tavg^3

df$Qsb_tavg_sq <- df$Qsb_tavg^2
df$Qsb_tavg_cu <- df$Qsb_tavg^3

df$Qsm_tavg_sq <- df$Qsm_tavg^2
df$Qsm_tavg_cu <- df$Qsm_tavg^3

df$SnowT_tavg_sq <- df$SnowT_tavg^2
df$SnowT_tavg_cu <- df$SnowT_tavg^3

df$AvgSurfT_tavg_sq <- df$AvgSurfT_tavg^2
df$AvgSurfT_tavg_cu <- df$AvgSurfT_tavg^3

df$SWE_tavg_sq <- df$SWE_tavg^2
df$SWE_tavg_cu <- df$SWE_tavg^3

df$SnowDepth_tavg_sq <- df$SnowDepth_tavg^2
df$SnowDepth_tavg_cu <- df$SnowDepth_tavg^3

df$SoilMoist_S_tavg_sq <- df$SoilMoist_S_tavg^2
df$SoilMoist_S_tavg_cu <- df$SoilMoist_S_tavg^3

df$SoilMoist_RZ_tavg_sq <- df$SoilMoist_RZ_tavg^2
df$SoilMoist_RZ_tavg_cu <- df$SoilMoist_RZ_tavg^3

df$SoilMoist_P_tavg_sq <- df$SoilMoist_P_tavg^2
df$SoilMoist_P_tavg_cu <- df$SoilMoist_P_tavg^3

df$ECanop_tavg_sq <- df$ECanop_tavg^2
df$ECanop_tavg_cu <- df$ECanop_tavg^3

df$TVeg_tavg_sq <- df$TVeg_tavg^2
df$TVeg_tavg_cu <- df$TVeg_tavg^3

df$ESoil_tavg_sq <- df$ESoil_tavg^2
df$ESoil_tavg_cu <- df$ESoil_tavg^3

df$CanopInt_tavg_sq <- df$CanopInt_tavg^2
df$CanopInt_tavg_cu <- df$CanopInt_tavg^3

df$EvapSnow_tavg_sq <- df$EvapSnow_tavg^2
df$EvapSnow_tavg_cu <- df$EvapSnow_tavg^3

df$ACond_tavg_sq <- df$ACond_tavg^2
df$ACond_tavg_cu <- df$ACond_tavg^3

df$TWS_tavg_sq <- df$TWS_tavg^2
df$TWS_tavg_cu <- df$TWS_tavg^3

df$GWS_tavg_sq <- df$GWS_tavg^2
df$GWS_tavg_cu <- df$GWS_tavg^3

df$Wind_f_tavg_sq <- df$Wind_f_tavg^2
df$Wind_f_tavg_cu <- df$Wind_f_tavg^3

df$Rainf_f_tavg_sq <- df$Rainf_f_tavg^2
df$Rainf_f_tavg_cu <- df$Rainf_f_tavg^3

df$Tair_f_tavg_sq <- df$Tair_f_tavg^2
df$Tair_f_tavg_cu <- df$Tair_f_tavg^3

df$Qair_f_tavg_sq <- df$Qair_f_tavg^2
df$Qair_f_tavg_cu <- df$Qair_f_tavg^3

df$Psurf_f_tavg_sq <- df$Psurf_f_tavg^2
df$Psurf_f_tavg_cu <- df$Psurf_f_tavg^3

df$SWdown_f_tavg_sq <- df$SWdown_f_tavg^2
df$SWdown_f_tavg_cu <- df$SWdown_f_tavg^3

df$LWdown_f_tavg_sq <- df$LWdown_f_tavg^2
df$LWdown_f_tavg_cu <- df$LWdown_f_tavg^3
```

```{r}
#| echo: false
#| message: false
#| warning: false
#run difference-in-differences
library("fixest")
library("kableExtra")

wcontrols<- "Swnet_tavg+Lwnet_tavg+Qle_tavg+Qh_tavg+Qg_tavg+Snowf_tavg+Rainf_tavg+Evap_tavg+Qs_tavg+Qsb_tavg+Qsm_tavg+SnowT_tavg+AvgSurfT_tavg+SWE_tavg+SnowDepth_tavg+SoilMoist_S_tavg+SoilMoist_RZ_tavg+SoilMoist_P_tavg+ECanop_tavg+TVeg_tavg+ESoil_tavg+CanopInt_tavg+EvapSnow_tavg+ACond_tavg+TWS_tavg+GWS_tavg+Wind_f_tavg+Rainf_f_tavg+Tair_f_tavg+Qair_f_tavg+Psurf_f_tavg+SWdown_f_tavg+LWdown_f_tavg"

wcontrols3<-"Swnet_tavg + Swnet_tavg_sq + Swnet_tavg_cu +Lwnet_tavg + Lwnet_tavg_sq+ Lwnet_tavg_cu +Qle_tavg + Qle_tavg_sq + Qle_tavg_cu +Qh_tavg + Qh_tavg_sq + Qh_tavg_cu +Qg_tavg + Qg_tavg_sq + Qg_tavg_cu +Snowf_tavg + Snowf_tavg_sq + Snowf_tavg_cu +Rainf_tavg + Rainf_tavg_sq + Rainf_tavg_cu +Evap_tavg + Evap_tavg_sq + Evap_tavg_cu +Qs_tavg + Qs_tavg_sq + Qs_tavg_cu +Qsb_tavg + Qsb_tavg_sq + Qsb_tavg_cu +Qsm_tavg + Qsm_tavg_sq + Qsm_tavg_cu +SnowT_tavg + SnowT_tavg_sq + SnowT_tavg_cu +AvgSurfT_tavg + AvgSurfT_tavg_sq + AvgSurfT_tavg_cu +SWE_tavg + SWE_tavg_sq + SWE_tavg_cu +SnowDepth_tavg + SnowDepth_tavg_sq + SnowDepth_tavg_cu +SoilMoist_S_tavg + SoilMoist_S_tavg_sq + SoilMoist_S_tavg_cu +SoilMoist_RZ_tavg + SoilMoist_RZ_tavg_sq +SoilMoist_RZ_tavg_cu +SoilMoist_P_tavg + SoilMoist_P_tavg_sq + SoilMoist_P_tavg_cu +ECanop_tavg + ECanop_tavg_sq + ECanop_tavg_cu +TVeg_tavg + TVeg_tavg_sq + TVeg_tavg_cu +ESoil_tavg + ESoil_tavg_sq + ESoil_tavg_cu +CanopInt_tavg + CanopInt_tavg_sq + CanopInt_tavg_cu +EvapSnow_tavg + EvapSnow_tavg_sq + EvapSnow_tavg_cu +ACond_tavg + ACond_tavg_sq + ACond_tavg_cu +TWS_tavg + TWS_tavg_sq + TWS_tavg_cu +GWS_tavg + GWS_tavg_sq + GWS_tavg_cu +Wind_f_tavg + Wind_f_tavg_sq + Wind_f_tavg_cu +Rainf_f_tavg + Rainf_f_tavg_sq + Rainf_f_tavg_cu +Tair_f_tavg + Tair_f_tavg_sq + Tair_f_tavg_cu +Qair_f_tavg + Qair_f_tavg_sq + Qair_f_tavg_cu +Psurf_f_tavg + Psurf_f_tavg_sq + Psurf_f_tavg_cu + SWdown_f_tavg + SWdown_f_tavg_sq + SWdown_f_tavg_cu + LWdown_f_tavg + LWdown_f_tavg_sq + LWdown_f_tavg_cu"
```

The table below show estimation results for $\gamma$.

```{r}
#| echo: false
#| message: false
#| warnings: false
mfe<-"| dow_m + Address"
myfe<-"| dow_my + Address"

f<-as.formula(paste("pm25 ~ operating:treatcity + operating + ", 
                    wcontrols, mfe))
m1 <- feols(f, cluster = "Address", data = df)

f<-as.formula(paste("pm25 ~ operating:treatcity + ", wcontrols, myfe))
m2 <- feols(f, cluster = "Address", data = df)

f<-as.formula(paste("pm25 ~ operating:treatcity + operating + ", 
                    wcontrols3, mfe))
m3 <- feols(f, cluster = "Address", data = df)

f<-as.formula(paste("pm25 ~ operating:treatcity + ", wcontrols3, myfe))
m4 <- feols(f, cluster = "Address", data = df)

res<-as.data.frame(rbind(coeftable(m1)[nrow(coeftable(m1)),],
       coeftable(m2)[nrow(coeftable(m2)),],
       coeftable(m3)[nrow(coeftable(m3)),],
       coeftable(m4)[nrow(coeftable(m4)),]))

res$controls<-c("Linear Weather Vars, City FE, Day of Week-Month FE",
                "Linear Weather Vars, City FE, Day of Week-Month-Year FE",
                "Polynomial Weather Vars, City FE, Day of Week-Month FE",
                "Polynomial Weather Vars, City FE, Day of Week-Month-Year FE")

kable(res, digits=2)
```

The table below show log-linear estimation results for $\gamma$.

```{r}
#| echo: false
#| message: false
#| warning: false
f<-as.formula(paste("log(pm25) ~ operating:treatcity + operating + ", 
                    wcontrols, mfe))
m1 <- feols(f, cluster = "Address", data = df)

f<-as.formula(paste("log(pm25) ~ operating:treatcity + ", wcontrols, myfe))
m2 <- feols(f, cluster = "Address", data = df)

f<-as.formula(paste("log(pm25) ~ operating:treatcity + operating + ", 
                    wcontrols3, mfe))
m3 <- feols(f, cluster = "Address", data = df)

f<-as.formula(paste("log(pm25) ~ operating:treatcity + ", wcontrols3, myfe))
m4 <- feols(f, cluster = "Address", data = df)

res<-as.data.frame(rbind(coeftable(m1)[nrow(coeftable(m1)),],
       coeftable(m2)[nrow(coeftable(m2)),],
       coeftable(m3)[nrow(coeftable(m3)),],
       coeftable(m4)[nrow(coeftable(m4)),]))

res$controls<-c("Linear Weather Vars, City FE, Day of Week-Month FE",
                "Linear Weather Vars, City FE, Day of Week-Month-Year FE",
                "Polynomial Weather Vars, City FE, Day of Week-Month FE",
                "Polynomial Weather Vars, City FE, Day of Week-Month-Year FE")

kable(res, digits=2)
```

The table below show log-linear estimation results for $\gamma$.

```{r}
#| echo: false
#| message: false
#| warning: false
f<-as.formula(paste("pm25 ~ operating:treatcity:dow + ", wcontrols3, myfe))
m4 <- feols(f, cluster = "Address", data = df)

res<-as.data.frame(
       coeftable(m4)[(nrow(coeftable(m4))-6):nrow(coeftable(m4)),])

res$controls<-c("Polynomial Weather Vars, City FE, Day of Week-Month-Year FE")

kable(res, digits=2)
```

Factors that can confound Charlotte treatment effects:

-   Concord, NC is located on the outskirts of the Charlotte, NC metro area. There can be a substitution effect as people move from Concord, NC to Charlotte because of the light rail.

-   Charlotte,NC was within the non-attainment area for Ozone from 2008 to 2015. We are looking at the effect of light rail opening from 2008 to 2012. However, Concord,NC was in the same non-attainment area as well.

-   Charlotte City Council set a goal in 2011 that by 2050, 50% of the city will be covered by tree canopy.

## 3.2. Synthetic Control

### Comparing Monthly Averages for Thursdays in Charlotte Relative to Monthly Averages for Thursdays in Control Cities

```{r}
#| echo: false
#| message: false
#| warnings: false

library("Synth")
library("gsynth")

df3 <- df |>
  filter(Address=="Winston-Salem, NC" | Address=="Greenville, SC" | 
           Address=="Columbia, SC" | Address=="Asheville, NC" |
           Address=="Charleston, SC" | Address=="Durham, NC" |
           Address=="Fayetteville, NC" | Address=="Greenville, SC" |
           Address=="Charlotte, NC") |>
  #create number representing each city
  mutate(add_num=factor(Address)) |>
  mutate(add_num=as.numeric(add_num)) |>
  #remove unwanted years
  mutate(date=as.Date(date)) |>
  filter(date<construction | date>open) |> 
  filter(date<expansion) |>
  #select thursdays 
  mutate(dow=weekdays(date)) |>
  filter(dow=="Thursday") |>
  #find monthly averages
  group_by(month, year, Address, add_num) |>
  summarize(pm25 = mean(pm25, na.rm = TRUE),
              Rainf_tavg = mean(Rainf_tavg, na.rm = TRUE),
              Swnet_tavg = mean(Swnet_tavg, na.rm = TRUE),
              Swnet_tavg_squared = Swnet_tavg^2,
              Swnet_tavg_cubed = Swnet_tavg^3,
              # Lwnet_tavg = mean(Lwnet_tavg, na.rm = TRUE),
              # Lwnet_tavg_squared = Lwnet_tavg^2,
              # Lwnet_tavg_cubed = Lwnet_tavg^3,
              Qle_tavg = mean(Qle_tavg, na.rm = TRUE),
              Qle_tavg_squared = Qle_tavg^2,
              Qle_tavg_cubed = Qle_tavg^3,
              Qh_tavg = mean(Qh_tavg, na.rm = TRUE),
              Qh_tavg_squared = Qh_tavg^2,
              Qh_tavg_cubed = Qh_tavg^3,
              Qg_tavg = mean(Qg_tavg, na.rm = TRUE),
              Qg_tavg_squared = Qg_tavg^2,
              Qg_tavg_cubed = Qg_tavg^3,
              Snowf_tavg = mean(Snowf_tavg, na.rm = TRUE),
              Snowf_tavg_squared = Snowf_tavg^2,
              Snowf_tavg_cubed = Snowf_tavg^3,
              Rainf_tavg_squared = Rainf_tavg^2,
              Rainf_tavg_cubed = Rainf_tavg^3,
              # Evap_tavg = mean(Evap_tavg, na.rm = TRUE),
              # Evap_tavg_squared = Evap_tavg^2,
              # Evap_tavg_cubed = Evap_tavg^3,
              # Qs_tavg = mean(Qs_tavg, na.rm = TRUE),
              # Qs_tavg_squared = Qs_tavg^2,
              # Qs_tavg_cubed = Qs_tavg^3,
              # Qsb_tavg = mean(Qsb_tavg, na.rm = TRUE),
              # Qsb_tavg_squared = Qsb_tavg^2,
              # Qsb_tavg_cubed = Qsb_tavg^3,
              Qsm_tavg = mean(Qsm_tavg, na.rm = TRUE),
              Qsm_tavg_squared = Qsm_tavg^2,
              Qsm_tavg_cubed = Qsm_tavg^3,
              SnowT_tavg = mean(SnowT_tavg, na.rm = TRUE),
              SnowT_tavg_squared = SnowT_tavg^2,
              SnowT_tavg_cubed = SnowT_tavg^3,
              AvgSurfT_tavg = mean(AvgSurfT_tavg, na.rm = TRUE),
              AvgSurfT_tavg_squared = AvgSurfT_tavg^2,
              AvgSurfT_tavg_cubed = AvgSurfT_tavg^3,
              SWE_tavg = mean(SWE_tavg, na.rm = TRUE),
              SWE_tavg_squared = SWE_tavg^2,
              SWE_tavg_cubed = SWE_tavg^3,
              SnowDepth_tavg = mean(SnowDepth_tavg, na.rm = TRUE),
              SnowDepth_tavg_squared = SnowDepth_tavg^2,
              SnowDepth_tavg_cubed = SnowDepth_tavg^3,
              SoilMoist_S_tavg = mean(SoilMoist_S_tavg, na.rm = TRUE),
              SoilMoist_S_tavg_squared = SoilMoist_S_tavg^2,
              SoilMoist_S_tavg_cubed = SoilMoist_S_tavg^3,
              SoilMoist_RZ_tavg = mean(SoilMoist_RZ_tavg, na.rm = TRUE),
              SoilMoist_RZ_tavg_squared = SoilMoist_RZ_tavg^2,
              SoilMoist_RZ_tavg_cubed = SoilMoist_RZ_tavg^3,
              SoilMoist_P_tavg = mean(SoilMoist_P_tavg, na.rm = TRUE),
              SoilMoist_P_tavg_squared = SoilMoist_P_tavg^2,
              SoilMoist_P_tavg_cubed = SoilMoist_P_tavg^3,
              ECanop_tavg = mean(ECanop_tavg, na.rm = TRUE),
              ECanop_tavg_squared = ECanop_tavg^2,
              ECanop_tavg_cubed = ECanop_tavg^3,
              TVeg_tavg = mean(TVeg_tavg, na.rm = TRUE),
              TVeg_tavg_squared = TVeg_tavg^2,
              TVeg_tavg_cubed = TVeg_tavg^3,
              ESoil_tavg = mean(ESoil_tavg, na.rm = TRUE),
              ESoil_tavg_squared = ESoil_tavg^2,
              ESoil_tavg_cubed = ESoil_tavg^3,
              # CanopInt_tavg = mean(CanopInt_tavg, na.rm = TRUE),
              # CanopInt_tavg_squared = CanopInt_tavg^2,
              # CanopInt_tavg_cubed = CanopInt_tavg^3,
              EvapSnow_tavg = mean(EvapSnow_tavg, na.rm = TRUE),
              EvapSnow_tavg_squared = EvapSnow_tavg^2,
              EvapSnow_tavg_cubed = EvapSnow_tavg^3,
              # ACond_tavg = mean(ACond_tavg, na.rm = TRUE),
              # ACond_tavg_squared = ACond_tavg^2,
              # ACond_tavg_cubed = ACond_tavg^3,
              TWS_tavg = mean(TWS_tavg, na.rm = TRUE),
              TWS_tavg_squared = TWS_tavg^2,
              TWS_tavg_cubed = TWS_tavg^3,
              # GWS_tavg = mean(GWS_tavg, na.rm = TRUE),
              # GWS_tavg_squared = GWS_tavg^2,
              # GWS_tavg_cubed = GWS_tavg^3,
              Wind_f_tavg = mean(Wind_f_tavg, na.rm = TRUE),
              Wind_f_tavg_squared = Wind_f_tavg^2,
              Wind_f_tavg_cubed = Wind_f_tavg^3,
              Tair_f_tavg = mean(Tair_f_tavg, na.rm = TRUE),
              Tair_f_tavg_squared = Tair_f_tavg^2,
              Tair_f_tavg_cubed = Tair_f_tavg^3,
              # Qair_f_tavg = mean(Qair_f_tavg, na.rm = TRUE),
              # Qair_f_tavg_squared = Qair_f_tavg^2,
              # Qair_f_tavg_cubed = Qair_f_tavg^3,
              Psurf_f_tavg = mean(Psurf_f_tavg, na.rm = TRUE),
              Psurf_f_tavg_squared = Psurf_f_tavg^2,
              Psurf_f_tavg_cubed = Psurf_f_tavg^3,
              SWdown_f_tavg = mean(SWdown_f_tavg, na.rm = TRUE),
              SWdown_f_tavg_squared = SWdown_f_tavg^2,
              SWdown_f_tavg_cubed = SWdown_f_tavg^3) |>
  #create time index
  mutate(date=as.Date(paste0(as.character(year), 
                             "-", as.character(month), "-01"))) |>
  mutate(time=interval(as.Date("2000-01-01"), date)/months(1)) |>
  #make sure that time index is continuous 
  mutate(time=ifelse(time>61, time-32, time))

#opening time=62

opentime<-62
end<-max(df3$time)

df4<-as.data.frame(df3)

dataprep.out <-
  dataprep(
    df4,
    predictors            = colnames(df4)[6:74], #add linear, square, cubic weather
    dependent             = "pm25",
    unit.variable         = "add_num",
    time.variable         = "time",
    unit.names.variable   = "Address",
    treatment.identifier  = 3 , #value in add_num column
    controls.identifier   = c(1:2, 4:8), #value of other control cities
    time.predictors.prior = c(1:opentime-1),
    time.optimize.ssr     = c(1:opentime-1),
    time.plot             = c(1:end)
  )

synth.out <- synth(dataprep.out)

synth.tables   <- synth.tab(
  dataprep.res = dataprep.out,
  synth.res    = synth.out)
```

```{r}
gaps.plot(synth.res    = synth.out,
          dataprep.res = dataprep.out,
          Ylab         = c("Gap"),
          Xlab         = c("Year"),
          Ylim         = c(-5, 5),
          Main         = ""
)

abline(v   = opentime,
       lty = 2)
```

# References

Di, Q., Y. Wei, A. Shtein, C. Hultquist, X. Xing, H. Amini, L. Shi, I. Kloog, R. Silvern, J. Kelly, M. B. Sabath, C. Choirat, P. Koutrakis, A. Lyapustin, Y. Wang, L. J. Mickley & J. Schwartz. 2021. Daily and Annual PM2.5 Concentrations for the Contiguous United States, 1-km Grids, v1 (2000 - 2016). Palisades, New York: NASA Socioeconomic Data and Applications Center (SEDAC). <https://doi.org/10.7927/0rvr-4538>

Fageda, X. (2021). Do light rail systems reduce traffic externalities? Empirical evidence from mid-size European cities. Transportation Research Part D: Transport and Environment, 92, 102731.

Ham, W., Vijayan, A., Schulte, N., & Herner, J. D. (2017). Commuter exposure to PM2. 5, BC, and UFP in six common transport microenvironments in Sacramento, California. Atmospheric Environment, 167, 335-345.

Houston, D., Dang, A., Wu, J., Chowdhury, Z., & Edwards, R. (2016). The cost of convenience; air pollution and noise on freeway and arterial light rail station platforms in Los Angeles. Transportation Research Part D: Transport and Environment, 49, 127-137.

Mulley, C., Hensher, D. A., & Cosgrove, D. (2017). Is rail cleaner and greener than bus?. Transportation Research Part D: Transport and Environment, 51, 14-28.

Park, E. S., & Sener, I. N. (2019). Traffic-related air emissions in Houston: Effects of light-rail transit. Science of the Total Environment, 651, 154-161.

Shaver, K. (2013, October 23). Residents concerned about impact of proposed light-rail Purple Line. The Washington Post. [https://www.washingtonpost.com/](https://www.washingtonpost.com/local/trafficandcommuting/residents-concerned-about-impacts-of-proposed-light-rail-purple-line/2013/10/23/ffc25d52-3bea-11e3-a94f-b58017bfee6c_story.html)

Texas A&M Transportation Institute. (2016). Light-Rail Transit (LRT) -- Transportation Policy Research. <https://policy.tti.tamu.edu/strategy/light-rail-transit/>
